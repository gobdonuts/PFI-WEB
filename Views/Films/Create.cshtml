@model MoviesManager.Models.FilmView

@{
    ViewBag.Title = "Create";
}

<h2>Ajouter un film</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Informations</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Synopsis, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Synopsis, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Synopsis, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Audience", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AudienceId, new SelectList(ViewBag.Audiences, "Value", "Text"), new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AudienceId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Style", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.StyleId, new SelectList(ViewBag.Styles, "Value", "Text"), new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StyleId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Choisir un poster", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Helper.ImageUploader(Model.Id, @Url.Content(Model.GetPosterURL()), "PosterImageData", @Url.Content("~/Posters/Loading_icon.gif"), "Click to change picture")
                @Html.ValidationMessageFor(model => model.PosterImageData, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--
            Html.ListBoxFor(model => model.AudienceId, (SelectList)ViewBag.Actors, new { htmlAttributes = new { class = "form-control", SelectionMode = "multiple" } }); (add ats)
            -->
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/imageUploader")
}